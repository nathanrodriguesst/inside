#ifndef INSIDE_VULNERABILITYREPOSITORY_H
#define INSIDE_VULNERABILITYREPOSITORY_H

#include <mariadb/conncpp.hpp>
#include <nlohmann/json.hpp>

struct VulnerableService {
    int id{};
    std::string service;
    std::string ip;
    int port{};
    std::string date;
};

void to_json(nlohmann::json& j, const VulnerableService& v);

class VulnerabilityRepository {
public:
    static std::vector<VulnerableService> selectFromVulnerableServices(const std::unique_ptr<sql::Connection>& connection);
    static void createVulnerableServiceRegister(const std::unique_ptr<sql::Connection>& connection,
                                                std::string &ip, int port, std::string &version,
                                                std::string &service);
    static std::vector<VulnerableService>
    selectFromVulnerableServicesTableByDate(const std::unique_ptr<sql::Connection> &connection,
                                                   const std::string& startDate, const std::string& endDate);
    static int selectCountVulnerabilities(const std::unique_ptr<sql::Connection> &conn);
};

#endif